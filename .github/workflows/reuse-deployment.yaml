name: Reusable-deploy-Workflow

on:
  workflow_call

jobs:
   reuse-deploy:
    environment:  
        name: development                ## it will apply all protection rule that we have created
        url:  http://18.234.61.209:31886/

    #outputs:
      #APP_INGRESS_URL: #{{steps.set-ingress-host-address.outputs.APP_INGRESS_HOST}}  ## here we have set the output for INGRESS_URL at job level so we can use this in other jobs
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: install kubectl cli
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'

      - name: set kubeconfig file
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: kubernetes cluster details
        run: |
            kubectl version --short
            echo "hello kubernetes"
            kubectl get nodes

      #- name: Save Nginx Ingress Controller IP as a GITHUB environment variable
        # id: set-ingress-host-address
      #  run: |
      #     echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> $GITHUB_OUTPUT

      - name: replace tokens in manifest file
        uses: cschleiden/replace-tokens@v1
        with: 
          tokenPrefix: '${'     # you will check prefix and suffix in deployment.yaml
          tokenSuffix: '}'
          files: '["kubernetes/development/*.yaml"]'    # manifest files are present in development folder
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }} 
          #INGRESS_IP: {{ env.INGRESS_IP}}   ## so we will call the env variable of ingress using line 117 also please add $ before {{ curly places

      - name: Check files
        run: |
           cat kubernetes/development/*.yaml

      - name: Deploy to dev env
        run: |
          kubectl apply -f kubernetes/development
          

